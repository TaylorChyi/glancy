/**
 * 背景：
 *  - 从 src/shared/components/ui/ChatInput/ChatInput.module.css 拆分出的样式片段，聚焦 container 的局部结构。
 * 目的：
 *  - 维持原有声明顺序同时降低单文件体积，便于渐进式梳理。
 * 关键决策与取舍：
 *  - 通过自动拆分避免手工复制引入的人为回归；
 *  - 保留原注释与排版，确保比对差异时信息完整。
 * 影响范围：
 *  - 对话输入组件 中引用的 className 映射。
 * 演进与TODO：
 *  - TODO: 后续可进一步语义化命名或抽离为 tokens。
 */

.container {
  /*
   * 背景：需要与释义面板共享宽度比例，确保 docker 栏内组件节奏统一。
   * 取舍：优先消费 Layout 集中下发的 --docker-row-width/--docker-row-max-width，
   *       既保证搜索态与动作态的等宽，又在脱离 docker 时回落到 SearchBox 默认宽度。
   */
  width: var(
    --docker-row-width,
    var(--chat-input-shell-width, var(--sb-shell-width, 100%))
  );
  display: flex;
  justify-content: center;
  max-width: var(
    --docker-row-max-width,
    var(--chat-input-shell-max, var(--sb-max-width))
  );
  margin-inline: auto;
}

.input-wrapper {
  width: 100%;
}

/*
 * 结构说明：SearchBox 维持统一的视觉壳层，此处通过 grid 划分语言、分隔符、文本与动作槽位。
 *  - 桌面端：四列横向排列，并以 column-gap 继承 searchbox 的节奏感。
 *  - 窄屏：降级为单列栈结构，divider 退化为横向描边，完全移除 flex-wrap 带来的换行抖动。
 */
.input-surface {
  /*
   * 背景：底部输入区需与侧边栏保持同一面板色调，避免跨页面底部区域割裂。
   * 取舍：优先读取 --sidebar-panel / --sidebar-hover-bg，缺省时回落到 SearchBox 内建 token，
   *       以免影响未来复用 SearchBox 的其它场景。
   */
  --sb-bg: var(--sidebar-panel, var(--sb-surface));
  --sb-bg-hover: var(
    --sidebar-hover-bg,
    color-mix(in srgb, var(--sidebar-panel, var(--sb-surface)) 94%, white 6%)
  );
  --sb-shell-width: var(--chat-input-shell-width, 100%);
  --padding-y: 0;
  --slot-gap: 0;

  display: grid;
  grid-template-columns:
    auto
    var(--chat-input-divider-width, 1px)
    minmax(0, 1fr)
    auto;
  grid-template-areas: "language divider text action";
  align-items: stretch;
  column-gap: var(--chat-input-inline-gap, var(--chat-input-bottom-gap, 12px));
}

.input-surface[data-language-visible="false"] {
  grid-template-columns: minmax(0, 1fr) auto;
  grid-template-areas: "text action";
}

.language-slot {
  grid-area: language;
  display: flex;
  align-items: center;
  min-width: 0;
  padding-block: var(--chat-input-bottom-pad-y, 12px);
}

.language-slot[data-visible="false"] {
  display: none;
}

.input-divider {
  grid-area: divider;
  width: var(--chat-input-divider-width, 1px);
  background: var(--chat-input-divider-color, var(--sb-divider));
  border-radius: 999px;
  align-self: stretch;
}

.input-surface[data-language-visible="false"] .input-divider {
  display: none;
}

.text-slot {
  grid-area: text;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-block: var(--chat-input-top-pad-y, 16px);
  min-width: 0;
}

.action-slot {
  grid-area: action;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-block: var(--chat-input-bottom-pad-y, 12px);
}

@media (width <= 640px) {
  .input-surface {
    grid-template-columns: minmax(0, 1fr);
    grid-template-areas:
      "text"
      "divider"
      "language"
      "action";
    row-gap: var(--chat-input-mobile-gap, var(--chat-input-bottom-gap, 12px));
  }

  .input-surface[data-language-visible="false"] {
    grid-template-columns: minmax(0, 1fr);
    grid-template-areas:
      "text"
      "action";
  }

  .input-divider {
    width: 100%;
    height: var(--chat-input-divider-width, 1px);
  }

  .input-surface[data-language-visible="false"] .input-divider {
    display: none;
  }

  .language-slot {
    padding-block-start: 0;
  }
}

.language-shell {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: var(--seg-h, 44px);
  padding-inline: var(--seg-pad-x, 20px);
  gap: var(--seg-arrow-gap, 12px);
  border-radius: var(--seg-r, 22px);
  color: var(--sb-text);
  font-size: var(--seg-font-size, 14px);
  font-weight: var(--seg-font-weight, 600);
  letter-spacing: var(--seg-letter-space, 0.04em);
  text-transform: uppercase;
  text-align: center;
  flex-shrink: 0;

  /*
   * 层级策略：通过透明壳体与排版节奏维持区块识别，依赖文字/焦点状态提供层级反馈；
   * 若未来需要更强的分割感，可在不破坏 hover/焦点节奏的前提下重新评估描边策略。
   */
  transition:
    background-color 0.2s ease,
    box-shadow 0.2s ease;
}

.language-shell:hover {
  /*
   * 交互取舍：改以文字色与透明壳体的对比提供悬停反馈，避免描边重现导致的视觉噪声。
   */
}

.language-shell:focus-within {
  box-shadow: var(--ring-focus);
}

.language-arrow,
.language-swap {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  padding-inline: var(--seg-arrow-gap, 12px);
  border: none;
  border-radius: calc(var(--seg-r, 22px) - 6px);
  background: transparent;
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-transform: inherit;
}
