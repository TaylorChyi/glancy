.section,
.summary,
.body {
  box-sizing: border-box;
}

.section {
  /*
   * 背景：释义区块在嵌套折叠时存在不同容器宽度的默认值。
   * 目的：强制所有子元素继承 section 的宽度，避免横向溢出。
   * 取舍：统一回落到无边框、透明背景以适配最新设计基调，同时保留圆角与布局节奏。
   */
  border-radius: var(--radius-lg, 14px);
  border: none;
  background: none;
  box-shadow: none;
  overflow: hidden;
  width: 100%;
}

.summary {
  width: 100%;
  display: flex;

  /*
   * 背景：按钮与标题左右分散排列，导致用户目光在阅读开头时需要额外扫到最右侧确认折叠状态。
   * 目的：将指示图标与文字统一左对齐，让展开控制顺着阅读方向出现，降低眼动负担。
   * 取舍：舍弃 space-between 布局，改由 gap 控制间距，保证整行仍为单一点击热区且视觉节奏一致。
   */
  justify-content: flex-start;
  align-items: center;
  border: none;
  background: none;
  color: inherit;
  cursor: pointer;
  text-align: left;
  transition:
    background 0.3s ease,
    color 0.3s ease;
}

.summary:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--surface-dark) 24%, transparent);
  outline-offset: 4px;
}

.summary-title {
  /*
   * 背景：折叠标题在包含长文本时会收缩宽度，导致内容溢出。
   * 目的：让标题文本填满剩余空间，同时保持视觉对齐的稳定性。
   * 取舍：放弃两端对齐，改为统一左对齐，以匹配 collapsible-summary 的排版需求；
   *       同时保持加粗以突出层级标题的视觉锚点。
   */
  display: inline-flex;
  flex-direction: column;
  gap: 4px;
  font-size: 1rem;
  font-weight: var(--font-bold);
  letter-spacing: 0.02em;
  flex: 1 1 auto;
  min-width: 0;
  text-align: left;
  text-align-last: left;
  overflow-wrap: anywhere;
}

/*
 * 背景：原有圆形底色在不同主题下与内容背景冲突，边框阴影也削弱了极简视觉层级。
 * 目的：去除底色与边框，直接以主题文本色绘制指示箭头，确保深浅主题自动适配。
 * 取舍：放弃额外装饰，仅保留尺寸与对齐以维持版面节奏。
 */
.chevron {
  flex-shrink: 0;
  width: 28px;
  height: 28px;
  display: grid;
  place-items: center;
  color: var(--color-text);
  background: none;
  border: none;
  box-shadow: none;
}

/*
 * 背景：箭头需在展开时朝下，且在黑/白主题间保持对比度。
 * 目的：以 currentColor 驱动边框绘制箭头，随父元素颜色自动切换。
 * 取舍：通过调整旋转角度取代双重色值混合，简化主题切换路径。
 */
.chevron-icon {
  width: 8px;
  height: 8px;
  border-right: 2px solid currentcolor;
  border-bottom: 2px solid currentcolor;
  transform: rotate(-45deg);
  transition: transform 0.32s ease;
}

.chevron-icon[data-open="true"] {
  transform: rotate(45deg);
}

.body {
  display: grid;
  grid-template-rows: 0fr;
  transition:
    grid-template-rows 0.32s ease,
    padding 0.32s ease;
  padding: 0 16px;
  background: none;
  width: 100%;
}

.body[data-open="true"] {
  grid-template-rows: 1fr;
  padding: 0 16px;
  background: none;
}

.body-inner {
  /*
   * 背景：Markdown 内容混合段落、列表与内联标签，默认对齐方式会打破版面节奏。
   * 目的：保证所有文本块宽度与 section 保持一致，并在多语言场景下启用两端对齐。
   */
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 16px;
  align-items: stretch;
  text-align: justify;
  text-align-last: justify;
  text-justify: inter-character;
  overflow-wrap: anywhere;
}

.body-inner > :global(*) {
  margin: 0;
  width: 100%;
}

/*
 * 背景：Markdown 提示词新增了表格输出，默认表格缺乏排版控制且边框与主题风格不符。
 * 目的：为表格提供统一的极简视觉语言，保持列间留白与对比度，同时复用主题 token。
 * 取舍：避免额外装饰，使用色彩混合轻量区分表头与数据行，并通过 joinClassNames 允许外部覆写。
 */
.table {
  width: 100%;
  border-collapse: collapse;
  border-radius: var(--radius-md, 12px);
  border: 1px solid
    color-mix(in srgb, var(--border-color, var(--color-text)) 26%, transparent);
  overflow: hidden;
  background: none;
}

.table thead {
  background: color-mix(
    in srgb,
    var(--color-surface-muted, transparent) 58%,
    transparent
  );
}

.table th,
.table td {
  padding: 12px 16px;
  border: 1px solid
    color-mix(in srgb, var(--border-color, var(--color-text)) 18%, transparent);
  text-align: left;
  vertical-align: top;
  color: inherit;
  background: none;
  overflow-wrap: anywhere;
}

.table tbody tr:nth-child(even) {
  background: color-mix(
    in srgb,
    var(--color-surface-muted, transparent) 34%,
    transparent
  );
}

/*
 * 背景：关闭 Markdown 动态渲染后需保持原始文本换行，避免长段落成为单行。
 * 目的：通过 pre-wrap 兼顾换行与空格保留，同时延续组件的极简排版。
 * 取舍：不额外引入颜色/间距，仅约束排版属性以复用现有设计语言。
 */
.plain {
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

/*
 * 背景：折叠正文中包含的标题默认继承两端对齐样式，导致视觉偏移。
 * 目的：限定标题类标签回落到左对齐，以保持层级标题的阅读顺序。
 */
.summary-title :global(h1, h2, h3, h4, h5),
.body-inner :global(h1, h2, h3, h4, h5) {
  text-align: left;
  text-align-last: left;
  text-justify: auto;
  font-weight: var(--font-bold);
}
