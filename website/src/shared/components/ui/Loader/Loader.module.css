/**
 * 背景：
 *  - Loader 升级为三层波浪圆环动画，需在 CSS 层提供 3D 透视与字形布点支持。
 * 目的：
 *  - 通过模块化样式定义场景、堆栈与字符姿态，确保组件仅传递动态矩阵信息。
 * 关键决策与取舍：
 *  - 保留原有居中与主题色继承策略，避免影响外层布局；
 *  - 使用 `transform-style: preserve-3d` 与统一的系统字体栈，呈现克制的奢侈品级极简视觉；
 *  - 采用 clamp 控制字符字号，兼顾桌面与移动端密度。
 */
.loader {
  position: relative;
  display: grid;
  place-items: center;
  inline-size: 100%;
  min-block-size: var(--vh, 100vh);
  padding: var(--space-4);
  background: transparent;
  color: var(--loader-symbol-color, var(--role-on-surface, currentColor));
}

.scene {
  position: relative;
  display: grid;
  place-items: center;
  perspective: 1000px;
  transform-style: preserve-3d;
  inline-size: min(80vw, 640px);
  block-size: min(80vh, 640px);
}

.stack {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8.75rem; /* 140px */
  transform-style: preserve-3d;
}

.ring {
  position: relative;
  transform-style: preserve-3d;
  will-change: transform;
  font-size: clamp(1.75rem, 3vw, 2rem);
  font-family:
    var(
      --font-family-sans,
      system-ui,
      -apple-system,
      "Segoe UI",
      Roboto,
      Helvetica,
      Arial,
      "Noto Sans CJK SC",
      sans-serif
    );
  color: inherit;
}

.glyph {
  position: absolute;
  inset-block-start: 50%;
  inset-inline-start: 50%;
  transform-origin: 0 0;
  white-space: pre;
  will-change: transform;
  color: inherit;
}

.label {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(0 0 0 0);
  white-space: nowrap;
  border: 0;
}

@media (width <= 480px) {
  .scene {
    inline-size: min(90vw, 640px);
    block-size: min(90vh, 640px);
  }
}
