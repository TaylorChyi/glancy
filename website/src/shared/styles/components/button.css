/*
 * 背景：
 *  - 旧按钮样式以 CSS Module 为主，缺乏语义化变量，难以在不同主题下复用。
 * 目的：
 *  - 建立按钮组件变量体系，通过 data-attributes 控制强调/语义/图标反色。
 * 关键决策与取舍：
 *  - 使用 CSS 变量承载按钮视觉参数，结合 Tailwind `@apply` 保持一致间距；
 *  - 提供 `data-icon` 与 `data-label` 控制强弱对比，满足“同主题内反相配色”。
 * 影响范围：
 *  - 所有 `.btn` 类按钮；后续 JS 组件可直接复用。
 * 演进与TODO：
 *  - 根据交互反馈补充 loading/ghost-soft 等更多变体，并与 tokens 体系联动。
 */
@layer components {
  .btn {
    @apply inline-flex items-center justify-center rounded-xl border;

    font-family: var(--btn-font-family, var(--component-button-font-family));
    font-size: var(--btn-font-size, var(--component-button-font-size));
    line-height: var(--btn-line-height, var(--component-button-line-height));
    font-weight: var(--btn-font-weight, var(--component-button-font-weight));
    gap: var(--btn-gap, var(--component-button-gap));
    padding-inline: var(--btn-padding-inline, var(--component-button-padding-inline));
    padding-block: var(--btn-padding-block, var(--component-button-padding-block));
    border-radius: var(--btn-radius, var(--component-button-radius));
    background: var(--btn-bg, var(--component-button-secondary-bg));
    color: var(--btn-label, var(--component-button-secondary-fg));
    border-color: var(
      --btn-border,
      var(--component-button-secondary-border, transparent)
    );
    box-shadow: var(--btn-shadow, none);
    outline: none;
  }

  .btn:focus-visible {
    @apply ring-2 ring-offset-2;

    --tw-ring-color: var(--component-button-focus-ring);
    --tw-ring-offset-color: transparent;
  }

  .btn .icon {
    color: var(--btn-icon, var(--btn-label, var(--component-button-secondary-fg)));
  }

  .btn[data-variant="primary"] {
    --btn-bg: var(--component-button-primary-bg);
    --btn-label: var(--component-button-primary-fg);
    --btn-border: transparent;
    --btn-bg-hover: var(--component-button-primary-bg-hover);
  }

  .btn[data-variant="secondary"] {
    --btn-bg: var(--component-button-secondary-bg);
    --btn-label: var(--component-button-secondary-fg);
    --btn-border: var(--component-button-secondary-border);
    --btn-bg-hover: var(--component-button-secondary-bg-hover);
  }

  .btn[data-variant="danger"] {
    --btn-bg: var(--component-button-danger-bg);
    --btn-label: var(--component-button-danger-fg);
    --btn-border: transparent;
    --btn-bg-hover: var(--component-button-danger-bg-hover);
  }

  .btn[data-variant="ghost"] {
    --btn-bg: var(--component-button-ghost-bg);
    --btn-label: var(--component-button-ghost-fg);
    --btn-border: var(--component-button-ghost-border);
  }

  .btn[data-variant="outline"] {
    --btn-bg: var(--component-button-outline-bg);
    --btn-label: var(--component-button-outline-fg);
    --btn-border: var(--component-button-outline-border);
  }

  .btn[data-emphasis="soft"][data-variant="primary"] {
    --btn-bg: color-mix(
      in oklab,
      var(--component-button-primary-bg) 18%,
      transparent
    );
    --btn-label: var(--component-button-primary-bg);
    --btn-border: color-mix(
      in oklab,
      var(--component-button-primary-bg) 35%,
      transparent
    );
  }

  .btn[data-icon="dark"] {
    --btn-icon: var(--color-text-inverse);
  }

  .btn[data-icon="light"] {
    --btn-icon: var(--color-text);
  }

  .btn[data-label="dark"] {
    --btn-label: var(--color-text-inverse);
  }

  .btn[data-label="light"] {
    --btn-label: var(--color-text);
  }

  .btn:hover {
    --btn-bg: var(--btn-bg-hover, var(--btn-bg));
    --btn-label: var(--btn-label-hover, var(--btn-label));
    --btn-border: var(--btn-border-hover, var(--btn-border));
  }

  .btn:active {
    --btn-bg: var(--btn-bg-active, var(--btn-bg));
    --btn-label: var(--btn-label-active, var(--btn-label));
  }

  .btn[disabled],
  .btn[aria-disabled="true"] {
    opacity: var(--btn-disabled-opacity, var(--component-button-disabled-opacity));
    pointer-events: none;
  }
}
