/**
 * 背景：
 *  - SettingsBody 迁移到组件内维护网格与滚动，避免页面/模态重复编排布局细节。
 * 目的：
 *  - 定义双栏布局与滚动策略，确保左右区域在模态及独立页面中都能保持可预测的高度与滚动行为。
 * 关键决策与取舍：
 *  - 采用 CSS Grid 生成列宽，通过 CSS 自定义属性暴露安全边距与列间距，便于调用方主题化。
 *  - 左右列分别封装滚动容器，防止外层遮罩承担滚动职责，保障 body 锁定逻辑持续生效。
 * 影响范围：
 *  - SettingsModal、Preferences 页面、后续重用 SettingsBody 的容器。
 * 演进与TODO：
 *  - TODO: 视需要扩展 data-stack 属性以支持抽屉式导航等更复杂的交互模式。
 */

.container {
  display: grid;
  grid-template-columns: var(
    --settings-body-grid-template,
    minmax(220px, 0.36fr) minmax(0, 1fr)
  );
  grid-template-rows: minmax(0, 1fr);
  gap: var(--settings-body-column-gap, 36px);

  /*
   * 通过锁定容器高度，确保模态在不同分区间切换时不发生跳动，
   * 并在右侧内容溢出时依赖内部滚动容器承接滚动职责。
   */
  /* stylelint-disable-next-line declaration-empty-line-before */

  --settings-body-height-fallback: calc(
    100vh - var(--settings-body-safe-area, 160px)
  );
  /* stylelint-disable-next-line declaration-empty-line-before */
  height: var(--settings-body-height, var(--settings-body-height-fallback));
  /* stylelint-disable-next-line declaration-empty-line-before */
  max-height: var(--settings-body-height, var(--settings-body-height-fallback));
  min-height: 0;
  width: 100%;
  align-items: stretch;
  overflow: hidden;
}

.nav-column {
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
  overflow: hidden;
}

.nav-scroller {
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1;
  min-height: 0;
  max-height: 100%;
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-gutter: stable both-edges;

  /*
   * 通过暴露背景与边框变量，让调用方能够对导航列套底色，同时保持原有滚动余量。
   * 默认保持透明以兼容历史调用场景，设置变量后可与 Sidebar 配色对齐。
   */
  background: var(--settings-body-nav-surface, transparent);
  border-radius: var(--settings-body-nav-radius, 0);
  border: var(--settings-body-nav-border-width, 0) solid
    var(--settings-body-nav-border-color, transparent);
  box-shadow: var(--settings-body-nav-shadow, none);
  padding: var(
    --settings-body-nav-padding-block-start,
    var(--settings-body-nav-padding, 0)
  ) calc(
    var(
        --settings-body-nav-padding-inline-end,
        var(--settings-body-nav-padding, 0px)
      ) +
      var(--settings-body-nav-scrollbar-gutter, 4px)
  ) var(
    --settings-body-nav-padding-block-end,
    var(--settings-body-nav-padding, 0)
  ) var(
    --settings-body-nav-padding-inline-start,
    var(--settings-body-nav-padding, 0)
  );
}

.nav-scroller > * {
  flex: 1;
  min-height: 0;
}

.content-column {
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
  overflow: hidden;
  border-inline-start: var(--settings-body-divider-width, 1px) solid
    var(
      --settings-body-divider-color,
      var(
        --sb-divider,
        color-mix(in srgb, var(--border-color, #1f2937) 70%, transparent 30%)
      )
    );
}

.content-scroller {
  flex: 1;
  min-height: 0;
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-gutter: stable both-edges;

  /*
   * 右侧内容列同样开放背景/间距变量，便于偏好设置页面与模态统一底色。
   * 默认保留原有 4px 滚动间隔，避免滚动条贴边。
   */
  background: var(--settings-body-content-surface, transparent);
  border-radius: var(--settings-body-content-radius, 0);
  border: var(--settings-body-content-border-width, 0) solid
    var(--settings-body-content-border-color, transparent);
  box-shadow: var(--settings-body-content-shadow, none);
  padding: var(
    --settings-body-content-padding-block-start,
    var(--settings-body-content-padding, 0)
  ) calc(
    var(
        --settings-body-content-padding-inline-end,
        var(--settings-body-content-padding, 0px)
      ) +
      var(--settings-body-content-scrollbar-gutter, 4px)
  ) var(
    --settings-body-content-padding-block-end,
    var(--settings-body-content-padding, 0)
  ) var(
    --settings-body-content-padding-inline-start,
    var(--settings-body-content-padding, 0)
  );
}

@media (width <= 1023px) {
  .container {
    grid-template-columns: 1fr;
    grid-template-rows: auto minmax(0, 1fr);
    height: auto;
    max-height: none;
    gap: var(--settings-body-column-gap-mobile, 28px);
  }

  .nav-column {
    overflow: visible;
  }

  .nav-scroller {
    flex: none;
    max-height: none;
    overflow: hidden auto;

    --settings-body-nav-scrollbar-gutter: 0px;

    padding-right: var(
      --settings-body-nav-padding-inline-end-mobile,
      var(
        --settings-body-nav-padding-inline-end,
        var(--settings-body-nav-padding, 0)
      )
    );
    padding-bottom: calc(
      var(
          --settings-body-nav-padding-block-end,
          var(--settings-body-nav-padding, 0px)
        ) +
        var(--settings-body-nav-mobile-bottom-offset, 6px)
    );
    scroll-padding-inline: 16px;
    scrollbar-gutter: auto;
  }

  .nav-scroller > * {
    /*
     * 当设置面板切换为单列布局时，让导航容器占满可用宽度，
     * 避免 min-content 触发横向滚动并破坏等宽栅格。此处使用 100%
     * 而非固定像素，方便未来根据内容动态扩展列数。
     */
    min-width: 100%;
  }

  .content-column {
    border-inline-start: none;
  }

  .content-scroller {
    max-height: none;

    --settings-body-content-scrollbar-gutter: 0px;

    padding-right: var(
      --settings-body-content-padding-inline-end-mobile,
      var(
        --settings-body-content-padding-inline-end,
        var(--settings-body-content-padding, 0)
      )
    );
  }
}
