/**
 * 背景：
 *  - Loader 动画从“双层遮罩”升级为“整幅素材淡入淡出”，强调完整素材的呼吸节奏。
 * 目的：
 *  - 通过 CSS 模块统一管理透明度过渡与尺寸 token，使 Hook 输出布尔态即可驱动渐隐渐显。
 * 关键决策与取舍：
 *  - 继续使用 opacity + transition，避免引入额外 keyframes，保持渲染栈纯粹；
 *  - 所有时长仍交由 CSS 变量控制，方便主题或无障碍场景动态调整。
 */
.loader {
  display: grid;
  place-items: center;
  inline-size: 100%;
  min-block-size: var(--vh, 100vh);
  padding: var(--space-4);
  background: transparent;
}

.symbol {
  position: relative;
  inline-size: min(
    80vw,
    calc(var(--waiting-frame-aspect-ratio) * var(--waiting-frame-height))
  );
  block-size: var(--waiting-frame-height);
  aspect-ratio: var(--waiting-frame-aspect-ratio);
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  box-shadow: none;
  border-radius: 0;
  isolation: isolate;
}

.frame {
  position: relative;
  inline-size: 100%;
  block-size: 100%;
  overflow: hidden;
  opacity: 0;
  transition: opacity var(--waiting-fade-duration, 1000ms) ease-in-out;
}

.frame-visible {
  opacity: 1;
}

.frame-asset {
  inline-size: 100%;
  block-size: 100%;
  display: block;
  object-fit: contain;
}

.label {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media (width <= 480px) {
  .symbol {
    inline-size: min(
      90vw,
      calc(var(--waiting-frame-aspect-ratio) * var(--waiting-frame-height))
    );
  }
}
