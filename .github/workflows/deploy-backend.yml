name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Code style check
        run: ./mvnw -B spotless:check checkstyle:check
        working-directory: backend
      - name: Run unit tests
        # 确保所有后端单元测试通过后再进行打包与部署，避免将潜在回归带入生产环境。
        run: ./mvnw -B test
        working-directory: backend
      - name: Build project
        run: ./mvnw -B -DskipTests clean package spring-boot:repackage
        working-directory: backend

      - name: Upload jar to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          timeout: 2m
          source: backend/target/glancy-backend.jar # ← 源仍在 backend/target/
          target: ${{ secrets.BACKEND_DEPLOY_PATH }}/target/
          overwrite: true
          strip_components: 2 # ← 关键：剥掉 backend/ 与 target/
          debug: true

      - name: Upload service unit
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          timeout: 2m
          source: backend/scripts/glancy-backend.service
          target: ${{ secrets.BACKEND_DEPLOY_PATH }}/
          overwrite: true
          strip_components: 2
          debug: true

      - name: Restart service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo cp ${{ secrets.BACKEND_DEPLOY_PATH }}/glancy-backend.service /etc/systemd/system/glancy-backend.service
            sudo systemctl daemon-reload
            if systemctl list-unit-files | grep -q '^glancy-backend.service'; then
              sudo systemctl restart glancy-backend.service
            else
              sudo systemctl enable --now glancy-backend.service
            fi
