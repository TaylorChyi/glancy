# 背景：
#  - 前端仓库的代码体量守卫需要在 CI 中落地，否则规则只能依赖人工执行。
# 目的：
#  - 在 Pull Request 阶段统一运行 ESLint 与样式行数校验，阻断超限代码进入主干。
# 关键决策与取舍：
#  - 仅针对 website 子项目执行，避免影响后端流水线；
#  - 复用项目原生命令（npm run lint / lint:css），降低维护成本。
# 影响范围：
#  - 所有指向 main 或 trunk 的 Pull Request；
#  - 质量门禁失败将阻断合并，需要先处理 lint 报错。
# 演进与TODO：
#  - 后续可补充缓存 node_modules 与添加测试流水线并行执行。
name: lint

on:
  pull_request:
    branches: ["trunk", "main"]
    paths:
      - "website/**"
      - ".github/workflows/lint.yml"

jobs:
  website-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint and structural guards
        run: npm run lint

      - name: Run Stylelint
        run: npm run lint:css
